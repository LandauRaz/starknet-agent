services:
  searxng:
    image: docker.io/searxng/searxng:latest
    volumes:
      - ./searxng:/etc/searxng:rw
    ports:
      - 4000:8080
    networks:
      - starknet-agent-network
    restart: unless-stopped

  starknet-agent-backend:
    container_name: starknet-agent-backend
    build:
      context: .
      dockerfile: backend.dockerfile
      args:
        - SEARXNG_API_URL=http://searxng:8080
    depends_on:
      - searxng
      - mongodb
      - cairobook-ingest
    ports:
      - 3001:3001
    volumes:
      - backend-dbstore:/home/starknet-agent/data
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - starknet-agent-network
    restart: unless-stopped

  starknet-agent-frontend:
    container_name: starknet-agent-frontend
    build:
      context: .
      dockerfile: app.dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://backend.chat.starknet.builders/api
        - NEXT_PUBLIC_WS_URL=wss://backend.chat.starknet.builders
        - NEXT_PUBLIC_HOSTED_MODE=true
    depends_on:
      - starknet-agent-backend
    ports:
      - 3000:3000
    networks:
      - starknet-agent-network
    restart: unless-stopped

  mongodb:
    image: mongodb/mongodb-atlas-local
    volumes:
      - mongodb-data:/data/db
    ports:
      - 27018:27017
    networks:
      - starknet-agent-network
    restart: unless-stopped

  cairobook-ingest:
    build:
      context: .
      dockerfile: ingest.dockerfile
    depends_on:
      - mongodb
    networks:
      - starknet-agent-network
    restart: 'no'

  nginx:
    image: valian/docker-nginx-auto-ssl
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ssl_data:/etc/resty-auto-ssl
    environment:
      ALLOWED_DOMAINS: '(backend.)?chat.starknet.builder'
      SITES: 'backend.chat.starknet.builders=starknet-agent-backend:3001;chat.starknet.builders=starknet-agent-frontend:3000'
    networks:
      - starknet-agent-network
    depends_on:
      - starknet-agent-backend
      - starknet-agent-frontend

networks:
  starknet-agent-network:

volumes:
  backend-dbstore:
  mongodb-data:
  ssl_data:
